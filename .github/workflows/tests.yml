name: Tests

on: [push, pull_request]

jobs:
  tests:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ['3.6', '3.7']

    name: Python ${{ matrix.python-version }} tests

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Get full python version
      id: full-python-version
      run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

    - name: Bootstrap environment
      run: |
        python -m ensurepip
        python -m pip install -U pip
        python -m pip install poetry

    - name: Configure poetry
      run: |
        python -m poetry config virtualenvs.in-project true

    - name: Setup cache
      uses: actions/cache@v2
      id: cache
      with:
        path: .venv
        key: venv-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Ensure cache is healthy
      if: steps.cache.outputs.cache-hit == 'true'
      run: |
        timeout 10s python -m poetry run pip --version || rm -rf .venv

    - name: Install dependencies
      run: |
        python -m poetry install --no-root

    - name: Run tests
      env:
        DJANGO_SETTINGS_MODULE: tests.settings
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      run: |
        python -m poetry run python -m pytest -v tests
        python -m poetry run coverage report
        python -m poetry run coveralls
